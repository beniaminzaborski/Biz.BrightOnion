import { Injectable } from "@angular/core";
import { HttpClient } from "@angular/common/http";

import { Observable } from "rxjs/Observable";
import "rxjs/add/operator/do";
import "rxjs/add/operator/map";
<<<<<<< HEAD
import { OrderItem } from "./order-item.model";
import { Order } from "./order.model";
import { OrdersApproval } from "./orders-approval.model";
import { environment } from 'src/environments/environment';
=======
import { MakeOrder, Order, OrderItem, CancelOrder, ApproveOrder } from "./order.model";
import { environment } from "../../environments/environment";
>>>>>>> master

@Injectable()
export class OrdersService {

  constructor(private http: HttpClient) { }

<<<<<<< HEAD
  public getOrders(room: string): Observable<OrderItem[]> {
    return this.http.get<OrderItem[]>(
      `${environment.orderServiceUrl}/${room}`);
  }

  public makeOrder(order: Order): Observable<boolean> {
    let body = JSON.stringify(order);

    let room = order.room;

    return this.http.post(
      `${environment.orderServiceUrl}/${room}`, body, { observe: 'response' }
    ).map(response => response.status == 201);
  }

  public removeOrder(room: string, id: string):  Observable<boolean> {
    return this.http.delete(
      `${environment.orderServiceUrl}/${room}/${id}`, { observe: 'response' }
    ).map(response => response.status == 204);
=======
  public getOrder(roomId: number): Observable<Order> {
    return this.http.get<Order>(
      `${environment.orderServiceUrl}/${roomId}`);
  }

  public makeOrder(makeOrder: MakeOrder): Observable<Order> {
    let body = JSON.stringify(makeOrder);
    return this.http.post<Order>(
      `${environment.orderServiceUrl}/make`, body, { observe: 'response' }
    ).map(response => { return response.body; });
  }

  public removeOrder(cancelOrder: CancelOrder): Observable<Order> {
    let body = JSON.stringify(cancelOrder);
    return this.http.post<Order>(
      `${environment.orderServiceUrl}/cancel`, body, { observe: 'response' }
    ).map(response => { return response.body; });
>>>>>>> master
  }

  public approveOrders(approveOrder: ApproveOrder): Observable<boolean> {
    let body = JSON.stringify(approveOrder);
    return this.http.post(
<<<<<<< HEAD
      `${environment.orderServiceUrl}/${room}/approve`, null, { observe: 'response' }
    ).map(response => response.status == 201);
=======
      `${environment.orderServiceUrl}/approve`, body, { observe: 'response' }
    ).map(response => response.status == 204);
>>>>>>> master
  }
}
